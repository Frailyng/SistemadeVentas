<div class="col-auto input-group align-items-center">
    <label class="col-form-label input-group-text">Seleccione:</label>

    <InputSelect class="form-control form-select" @bind-Value="ProductoId">
        <option value="0">-- Seleccione un producto --</option>
        @foreach (var producto in Productos)
        {
            <option value="@producto.ProductoId">@producto.ProductoId - @producto.Nombre ($@producto.Precio.ToString("N2"))</option>
        }
    </InputSelect>
    <label class="col-form-label input-group-text">Valor:</label>
    <InputNumber class="form-control" id="quantity-input" @bind-Value="Valor" min="0" />

    <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="TriggerSelection">Agregar</button>
</div>
@if (ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}


@code {

    [Parameter]
    public List<Productos> Productos { get; set; } = [];

    [Parameter]
    public EventCallback<(Productos Producto, decimal Quantity)> OnProductoSelected { get; set; } // Event for  selection

    [Parameter]
    public int ProductoId { get; set; }

    [Parameter]
    public decimal Valor { get; set; }

    private string? ErrorMessage { get; set; } = null;

    private async Task TriggerSelection()
    {
        ErrorMessage = null;
        if (ProductoId > 0)
        {
            var ProductoSeleccionado = Productos.Single(p => p.ProductoId == ProductoId);

            await OnProductoSelected.InvokeAsync((ProductoSeleccionado, Valor));
        }
    }
}