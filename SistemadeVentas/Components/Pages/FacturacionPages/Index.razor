@page "/Facturacion/Index"
@inject FacturacionService facturacionService
@inject NavigationManager NavigationManager

<PageTitle>Facturación</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            <h5 class="card-title">Facturación</h5>
        </div>

        <div class="card-body">
            <!-- Filtros de búsqueda y botón Crear -->
            <div class="mb-3 row align-items-end">
                <div class="col-md-3">
                    <label for="filtrarPor" class="form-label">Filtrar por:</label>
                    <select id="filtrarPor" class="form-select form-select-sm" @bind="Filtro">
                        <option value="cliente">Cliente</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="valorFiltro" class="form-label">Buscar:</label>
                    <input type="text" id="valorFiltro" class="form-control form-control-sm" placeholder="Buscar..." @bind="valorFiltro">
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-primary btn-sm" type="button" @onclick="Buscar">
                        <span class="bi bi-search"></span> Buscar
                    </button>
                </div>
                <div class="col-md-2 text-end">
                    <!-- Botón Crear que lleva a /Facturacion/Create -->
                    <a href="/Facturacion/Create" class="btn btn-success btn-sm">
                        <span class="bi bi-plus-square"></span> Crear
                    </a>
                </div>
            </div>

            <!-- Tabla de Facturas -->
            <table class="table table-light table-bordered">
                <thead class="table table-striped text-center text-white bg-primary">
                    <tr>
                        <th>FacturaID</th>
                        <th>Nombre Cliente</th>
                        <th>Fecha Factura</th>
                        <th>Total</th>
                        <th>Estado de la Factura</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (facturas.Any())
                    {
                        foreach (var factura in facturas)
                        {
                            <tr>
                                <td class="text-center">@factura.FacturaId</td>
                                <td class="text-center">@factura.NombreCliente</td>
                                <td class="text-center">@factura.FechaFactura.ToString("dd/MM/yyyy")</td>
                                <td class="text-center">@factura.Total.ToString("C")</td>
                                <td class="text-center">@factura.Estado</td>
                                <td class="text-center">
                                    <a href="/Facturacion/Edit/@factura.FacturaId" class="btn bi bi-pencil-square"></a>
                                </td>
                                <td class="text-center">
                                    <a href="/Facturacion/Delete/@factura.FacturaId" class="btn bi bi-trash"></a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">No hay Facturas disponibles</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer space-between">
            <label>Cantidad: @facturas.Count()</label>
            <label>Total Facturado: @facturas.Sum(p => p.Total).ToString("C")</label>
        </div>
    </div>
</div>

@code {
    public List<Facturacion> facturas = new List<Facturacion>();
    public string Filtro { get; set; } = string.Empty;
    public string valorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        facturas = await facturacionService.Listar(c => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (Filtro == "cliente")
            {
                facturas = await facturacionService.Listar(p => p.NombreCliente.ToLower().Contains(valorFiltro.ToLower()));
            }
        }
        else
        {
            facturas = await facturacionService.Listar(p => true);
        }
    }

    private async Task Restablecer()
    {
        facturas = await facturacionService.Listar(c => true);
        Filtro = string.Empty;
        valorFiltro = string.Empty;
    }
}