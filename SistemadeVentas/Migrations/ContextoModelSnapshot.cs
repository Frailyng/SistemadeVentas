// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemadeVentas.DAL;

#nullable disable

namespace SistemadeVentas.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("SistemadeVentas.Models.DetalleFactura", b =>
                {
                    b.Property<int>("DetalleFacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FacturacionFacturaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("TEXT");

                    b.HasKey("DetalleFacturaId");

                    b.HasIndex("FacturacionFacturaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleFactura");
                });

            modelBuilder.Entity("SistemadeVentas.Models.Facturacion", b =>
                {
                    b.Property<int>("FacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("FacturaId");

                    b.ToTable("Facturaciones");
                });

            modelBuilder.Entity("SistemadeVentas.Models.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaUltimaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventarioId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("SistemadeVentas.Models.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Categoria = "Herramientas",
                            CodigoProducto = "H001",
                            Descripcion = "Martillo de acero de 500g",
                            EstaActivo = true,
                            Nombre = "Martillo de acero",
                            Precio = 15.99m,
                            Proveedor = "Ferretería A"
                        },
                        new
                        {
                            ProductoId = 2,
                            Categoria = "Herramientas",
                            CodigoProducto = "H002",
                            Descripcion = "Destornillador Phillips de acero inoxidable",
                            EstaActivo = true,
                            Nombre = "Destornillador Phillips",
                            Precio = 5.50m,
                            Proveedor = "Ferretería A"
                        },
                        new
                        {
                            ProductoId = 3,
                            Categoria = "Herramientas",
                            CodigoProducto = "H003",
                            Descripcion = "Llave inglesa ajustable de 8 pulgadas",
                            EstaActivo = true,
                            Nombre = "Llave inglesa",
                            Precio = 12.30m,
                            Proveedor = "Ferretería A"
                        },
                        new
                        {
                            ProductoId = 4,
                            Categoria = "Pinturas",
                            CodigoProducto = "P001",
                            Descripcion = "Pintura acrílica color blanco",
                            EstaActivo = true,
                            Nombre = "Pintura acrílica",
                            Precio = 20.00m,
                            Proveedor = "Pinturas B"
                        },
                        new
                        {
                            ProductoId = 5,
                            Categoria = "Pinturas",
                            CodigoProducto = "P002",
                            Descripcion = "Brocha de 2 pulgadas para pintura",
                            EstaActivo = true,
                            Nombre = "Brocha de pintura",
                            Precio = 3.75m,
                            Proveedor = "Pinturas B"
                        },
                        new
                        {
                            ProductoId = 6,
                            Categoria = "Pinturas",
                            CodigoProducto = "P003",
                            Descripcion = "Rodillo de pintura de 10 pulgadas",
                            EstaActivo = true,
                            Nombre = "Rodillo de pintura",
                            Precio = 7.25m,
                            Proveedor = "Pinturas B"
                        },
                        new
                        {
                            ProductoId = 7,
                            Categoria = "Plomería",
                            CodigoProducto = "P004",
                            Descripcion = "Tubería PVC de 2 pulgadas, longitud de 3m",
                            EstaActivo = true,
                            Nombre = "Tubería PVC 2\"",
                            Precio = 10.50m,
                            Proveedor = "Plomería C"
                        },
                        new
                        {
                            ProductoId = 8,
                            Categoria = "Plomería",
                            CodigoProducto = "P005",
                            Descripcion = "Codo PVC de 90 grados",
                            EstaActivo = true,
                            Nombre = "Codo PVC 90°",
                            Precio = 2.00m,
                            Proveedor = "Plomería C"
                        },
                        new
                        {
                            ProductoId = 9,
                            Categoria = "Plomería",
                            CodigoProducto = "P006",
                            Descripcion = "Pegamento especial para PVC",
                            EstaActivo = true,
                            Nombre = "Pegamento para PVC",
                            Precio = 4.75m,
                            Proveedor = "Plomería C"
                        },
                        new
                        {
                            ProductoId = 10,
                            Categoria = "Escaleras",
                            CodigoProducto = "E001",
                            Descripcion = "Escalera de aluminio de 3 escalones",
                            EstaActivo = true,
                            Nombre = "Escalera de aluminio",
                            Precio = 75.00m,
                            Proveedor = "Escaleras D"
                        });
                });

            modelBuilder.Entity("SistemadeVentas.Models.DetalleFactura", b =>
                {
                    b.HasOne("SistemadeVentas.Models.Facturacion", null)
                        .WithMany("DetalleFactura")
                        .HasForeignKey("FacturacionFacturaId");

                    b.HasOne("SistemadeVentas.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SistemadeVentas.Models.Inventario", b =>
                {
                    b.HasOne("SistemadeVentas.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SistemadeVentas.Models.Facturacion", b =>
                {
                    b.Navigation("DetalleFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
